- name: Find latest version of starship
  uri:
    url: https://api.github.com/repos/starship/starship/releases/latest
    return_content: true
  register: latest_release

- name: Set starship version
  when: starship_version is not defined
  set_fact:
    starship_version: "{{ (latest_release.content | from_json).tag_name }}"

- name: Check current starship version
  command: starship --version
  register: starship_output
  ignore_errors: true
  changed_when: False

- name: Set current starship version
  when: starship_output is succeeded
  set_fact:
    # Find the current starship version. Output if of the form "starship x.y.z" and we want to turn it into "vx.y.z"
    current_starship_version: "v{{ starship_output.stdout_lines[0] | regex_search('([0-9]+\\.){2}[0-9]+') }}"

- name: Download, extract and install starship
  when: current_starship_version | default('none') != starship_version
  become: true
  unarchive:
    src: "https://github.com/starship/starship/releases/download/{{ starship_version }}/starship-{{ ansible_architecture }}-unknown-linux-musl.tar.gz"
    dest: /usr/local/bin/
    remote_src: true

- name: Add starship to bash_profile
  blockinfile:
    content: |
      # Starship
      if command -v starship > /dev/null; then
          eval "$(starship init bash)"
      fi
    path: /home/{{ ansible_user_id }}/.bashrc
    marker: "# {mark} ANSIBLE MANAGED BLOCK STARSHIP"

- name: Add starship config
  copy:
    src: starship.toml
    dest: /home/{{ ansible_user_id }}/.config/starship.toml
